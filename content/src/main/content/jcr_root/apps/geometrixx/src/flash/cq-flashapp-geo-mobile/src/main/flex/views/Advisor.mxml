<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:cq="com.adobe.cq.foundation.components.*"
xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark"
		xmlns:cs="http://ns.adobe.com/rtc"
		width="100%"
		height="100%"
		currentState="logon" xmlns:charts="charts.*">
	
		<fx:Script>
		
		<![CDATA[
			
			import com.adobe.rtc.events.SessionEvent;
			import mx.collections.ArrayCollection;
			import com.adobe.jcr.Node;
			
			[Bindable] private var roomURL:String = "https://collaboration.adobelivecycle.com/coenraets/facetoface";
			
			protected var cameraIndex:int;	
			
			protected function login():void
			{
				cameraIndex=cameraList.selectedIndex;
				session.login();
				currentState = "connecting";
				cameraList.selectedIndex = -1;
			}
			
			protected function session_synchronizationChange(event:SessionEvent):void
			{
				if (session.isSynchronized)
				{
					currentState = "default";
					webCam.publisher.cameraNameIndex = ""+cameraIndex;
					webCam.startWebcam();
				}
				else 
				{
					currentState = "logon";
				}
			}
			
		]]>
		
	</fx:Script>
	
	<s:states>
		<s:State name="logon"/>
		<s:State name="default"/>
		<s:State name="connecting"/>
		<s:State name="error"/>
	</s:states>
	<fx:Declarations>
		<cs:AdobeHSAuthenticator id="auth" userName="user"/>
		<cs:ConnectSession id="session" authenticator="{auth}" roomURL="{roomURL}"
						   synchronizationChange="session_synchronizationChange(event)"
						   error="currentState='error'"/>
	</fx:Declarations>

	<cs:WebCamera id="webCam" top="0" left="0" width="200" bottom="0" includeIn="default" connectSession="{session}"/>
	<charts:CollaborativePortfolioChart top="8" left="200" bottom="0" right="0" includeIn="default" session="{session}"/>
	
	<cs:SharedCursorPane top="8" left="202" bottom="0" right="0" includeIn="default" connectSession="{session}"/>
	
	<s:List id="cameraList" dataProvider="{new ArrayCollection(Camera.names)}" top="0" left="20" right="20" bottom="0" borderVisible="true" includeIn="logon"
			alternatingItemColors="{[0xFFFFFF, 0xFFFFFF]}"
			change="login()"/>
	
	<s:Label text="We can't find your financial advisor." horizontalCenter="0" verticalCenter="-14" includeIn="error"/>
	<s:Label text="Check your network connection." horizontalCenter="0" verticalCenter="14" includeIn="error"/>
	
	<s:Button label="OK" left="20" right="20" bottom="20" height="80" includeIn="error" 
			  click="currentState='logon'"/>
	
	<s:Group verticalCenter="0" horizontalCenter="0" height="150" includeIn="connecting" >
		<s:Rect top="0" bottom="0" left="0" right="0" radiusX="4" radiusY="4" alpha=".5">
			<s:fill>
				<s:SolidColor color="#000000"/>
			</s:fill>
		</s:Rect>
		<s:Label text="Connecting to financial advisor..." fontSize="24" color="#FFFFFF" verticalCenter="-20" left="20" right="20"/>
		<!-- <s:BusyIndicator verticalCenter="28" horizontalCenter="0"/> --> 
	</s:Group>
	
</s:Group>
